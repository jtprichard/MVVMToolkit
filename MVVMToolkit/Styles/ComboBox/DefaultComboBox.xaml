<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Colors.xaml"/>
        <ResourceDictionary Source="../Fonts.xaml"/>
        <ResourceDictionary Source="ToggleButton.xaml"/>
        <ResourceDictionary Source="../Text/TextBlock.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultComboBox" 
           TargetType="{x:Type ComboBox}" 
           BasedOn="{StaticResource {x:Type ComboBox}}">

        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PBBlueBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="2,0,2,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton" 
                                            ClickMode="Press" Focusable="False"
                                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            Style="{StaticResource ToggleButtonTemplate}"/>

                            <ContentPresenter x:Name="ContentSite" Margin="5, 3, 23, 3" 
                                                IsHitTestVisible="False"
                                                HorizontalAlignment="Left" 
                                                VerticalAlignment="Center"  
                                                Content="{TemplateBinding SelectionBoxItem}" 
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>

                            <TextBox x:Name="PART_EditableTextBox" 
                                        Margin="3, 3, 23, 3"    
                                        BorderThickness="0"
                                        IsReadOnly="{TemplateBinding IsReadOnly}"
                                        Visibility="Hidden" Background="Transparent"
                                        HorizontalAlignment="Left" VerticalAlignment="Center"
                                        Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="{x:Type TextBox}" >
                                        <Border x:Name="PART_ContentHost" Focusable="False"/>
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>

                            <!-- Popup showing items -->
                            <Popup x:Name="Popup" 
                                    Placement="Bottom"
                                    Focusable="False" AllowsTransparency="False"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    PopupAnimation="Slide" >
                                <Grid x:Name="DropDown" 
                                        SnapsToDevicePixels="True"
                                        MinWidth="{TemplateBinding ActualWidth}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" 
                                            Background="{StaticResource PBLightBackgroundBrush}" 
                                            Margin="0, 1, 0, 0"
                                            CornerRadius="2" 
                                            BorderThickness="1,0,1,1" 
                                            BorderBrush="{StaticResource PBBlueBrush}"/>
                                    <ScrollViewer Margin="4" 
                                                  SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource PBGrayBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="TextElement.Foreground"  Value="{StaticResource PBBlueBrush}"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        Name="Border"
                        SnapsToDevicePixels="True"
                        Padding="3,2,2,2">
                        <ContentPresenter
                            TextBlock.FontFamily="{StaticResource PBMediumFont}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                            <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource PBMediumLightBlueBrush}"/>
                            <Setter Property="TextElement.Foreground" Value="{StaticResource PBDarkBlueBrush}"></Setter>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource PBGrayBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Dialog combobox variant that includes default margin -->
    <Style x:Key="DialogComboBox" 
           BasedOn="{StaticResource DefaultComboBox}"
           TargetType="{x:Type ComboBox}">

        <Setter Property="Margin" Value="10,3,10,3"/>

    </Style>



</ResourceDictionary>
